apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "molt-lms.fullname" . }}-orchestrator
  namespace : {{ .Release.namespace | quote }}
  labels:
    {{- include "molt-lms.labels" . | nindent 4 }}
    release: {{ .Values.orchestrator.releaseName }}
  {{- with .Values.orchestrator.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "molt-lms.selectorLabels" . | nindent 6 }}
      release: {{ .Values.orchestrator.releaseName }}
  template:
    metadata:
    {{- with .Values.orchestrator.annotations }}
      annotations: {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "molt-lms.selectorLabels" . | nindent 8 }}
        release: {{ .Values.orchestrator.releaseName }}
      {{- with .Values.orchestrator.labels }}
        {{- toYaml . | nindent 4 }}
      {{- end }}
      {{- with .Values.labels }}
        {{- toYaml . | nindent 4 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "molt-lms.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: molt-lms-orchestrator
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.orchestrator.configSecretName }}
            - name: ORCH_READ_CONFIG_FILE
              value: "true"
            {{- end }}
            - name: ORCH_K8S_LMS_PORT
              value: {{ .Values.lms.service.port | quote }}
            - name: ORCH_K8S_LMS_SERVICE_NAME
              value: {{ include "molt-lms.fullname" . }}
            - name: ORCH_K8S_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: ORCH_SOURCE_DIALECT
              value: {{ .Values.orchestrator.sourceDialect }}
            - name: ORCH_TARGET_DIALECT
              value: "cockroach"
            - name: ORCH_ALLOW_ORIGIN
              value: {{ .Values.orchestrator.allowOrigin }}
            - name: ORCH_LOGGING
              value: {{ .Values.orchestrator.logLevel }}
          {{- with .Values.orchestrator.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/bin/sh", "-c"]
          args: [
          "./molt-lms-orchestrator --k8s-running"
          ]
          ports:
            - name: orchestrator
              containerPort: {{ .Values.orchestrator.service.port }}
            - name: orch-metrics
              containerPort: {{ .Values.orchestrator.service.metricsPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: orch-metrics
              scheme: HTTP
          resources:
            {{- toYaml .Values.orchestrator.resources | nindent 12 }}
      {{- if or .Values.orchestrator.configSecretName .Values.orchestrator.sslVolumes .Values.orchestrator.sslVolumeMounts }}
          volumeMounts:
            {{- if .Values.orchestrator.configSecretName }}
            - mountPath: "/app/configs"
              name: {{ .Values.orchestrator.configSecretName }}
              readOnly: true
            {{- end }}
            {{- with .Values.orchestrator.sslVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.orchestrator.configSecretName }}
        - name: {{ .Values.orchestrator.configSecretName }}
          secret:
            secretName: {{ .Values.orchestrator.configSecretName }}
        {{- end }}
        {{- with .Values.orchestrator.sslVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.orchestrator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
